1963. Minimum Number of Swaps to Make the String Balanced
Medium
Topics
Companies
Hint
You are given a 0-indexed string s of even length n. The string consists of exactly n / 2 opening brackets '[' and n / 2 closing brackets ']'.

A string is called balanced if and only if:

It is the empty string, or
It can be written as AB, where both A and B are balanced strings, or
It can be written as [C], where C is a balanced string.
You may swap the brackets at any two indices any number of times.

Return the minimum number of swaps to make s balanced.

 

Example 1:

Input: s = "][]["
Output: 1
Explanation: You can make the string balanced by swapping index 0 with index 3.
The resulting string is "[[]]".
Example 2:

Input: s = "]]][[["
Output: 2
Explanation: You can do the following to make the string balanced:
- Swap index 0 with index 4. s = "[]][][".
- Swap index 1 with index 5. s = "[[][]]".
The resulting string is "[[][]]".
Example 3:

Input: s = "[]"
Output: 0
Explanation: The string is already balanced.
 

Constraints:

n == s.length
2 <= n <= 106
n is even.
s[i] is either '[' or ']'.
The number of opening brackets '[' equals n / 2, and the number of closing brackets ']' equals n / 2.


CODE
public class Solution {
    public int minSwaps(String s) {
        int balance = 0;
        int minBalance = 0;

        // Traverse through the string
        for (char ch : s.toCharArray()) {
            if (ch == '[') {
                balance++;  // Increase balance for an opening bracket
            } else {
                balance--;  // Decrease balance for a closing bracket
            }

            // Track the minimum balance (how unbalanced the string is at worst)
            minBalance = Math.min(minBalance, balance);
        }

        // The number of swaps needed is half of the absolute value of minBalance
        return (-minBalance + 1) / 2;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        
        // Test case 1
        String s1 = "][][";
        System.out.println("Minimum swaps for s1: " + solution.minSwaps(s1));  // Output: 1
        
        // Test case 2
        String s2 = "]]][[[";
        System.out.println("Minimum swaps for s2: " + solution.minSwaps(s2));  // Output: 2
        
        // Test case 3
        String s3 = "[]";
        System.out.println("Minimum swaps for s3: " + solution.minSwaps(s3));  // Output: 0
    }
}

