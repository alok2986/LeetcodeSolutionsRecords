670. Maximum Swap
Solved
Medium
Topics
Companies
You are given an integer num. You can swap two digits at most once to get the maximum valued number.

Return the maximum valued number you can get.

 

Example 1:

Input: num = 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:

Input: num = 9973
Output: 9973
Explanation: No swap.
 

Constraints:

0 <= num <= 108

Code:
public class Solution {
    public int maximumSwap(int num) {
        // Convert the number to a character array
        char[] digits = Integer.toString(num).toCharArray();
        
        // Create an array to store the last occurrence of each digit (0 to 9)
        int[] lastIndex = new int[10];
        for (int i = 0; i < digits.length; i++) {
            lastIndex[digits[i] - '0'] = i;
        }

        // Traverse the digits array
        for (int i = 0; i < digits.length; i++) {
            // Check if a larger digit exists after the current digit
            for (int d = 9; d > digits[i] - '0'; d--) {
                // If there is a larger digit later in the array
                if (lastIndex[d] > i) {
                    // Swap the digits
                    char temp = digits[i];
                    digits[i] = digits[lastIndex[d]];
                    digits[lastIndex[d]] = temp;
                    
                    // Return the new number after swapping
                    return Integer.parseInt(new String(digits));
                }
            }
        }

        // If no swap is performed, return the original number
        return num;
    }

    // Main method to test the solution
    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.maximumSwap(2736)); // Output: 7236
        System.out.println(solution.maximumSwap(9973)); // Output: 9973
    }
}
