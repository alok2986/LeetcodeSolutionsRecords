2491. Divide Players Into Teams of Equal Skill
Medium
Topics
Companies
Hint
You are given a positive integer array skill of even length n where skill[i] denotes the skill of the ith player. Divide the players into n / 2 teams of size 2 such that the total skill of each team is equal.

The chemistry of a team is equal to the product of the skills of the players on that team.

Return the sum of the chemistry of all the teams, or return -1 if there is no way to divide the players into teams such that the total skill of each team is equal.

 

Example 1:

Input: skill = [3,2,5,1,3,4]
Output: 22
Explanation: 
Divide the players into the following teams: (1, 5), (2, 4), (3, 3), where each team has a total skill of 6.
The sum of the chemistry of all the teams is: 1 * 5 + 2 * 4 + 3 * 3 = 5 + 8 + 9 = 22.
Example 2:

Input: skill = [3,4]
Output: 12
Explanation: 
The two players form a team with a total skill of 7.
The chemistry of the team is 3 * 4 = 12.
Example 3:

Input: skill = [1,1,2,3]
Output: -1
Explanation: 
There is no way to divide the players into teams such that the total skill of each team is equal.
 

Constraints:

2 <= skill.length <= 105
skill.length is even.
1 <= skill[i] <= 1000


CODE:
import java.util.Arrays;

public class Solution {
    public long dividePlayers(int[] skill) {
        // Step 1: Sort the skill array
        Arrays.sort(skill);
        
        // Step 2: Calculate the target total skill sum for each pair
        int n = skill.length;
        int targetSkillSum = skill[0] + skill[n - 1];  // Sum of the first and last elements
        long totalChemistry = 0;  // To store the sum of chemistry
        
        // Step 3: Two-pointer approach to form teams
        int left = 0, right = n - 1;
        while (left < right) {
            int currentPairSkillSum = skill[left] + skill[right];
            
            // Step 4: Check if the current pair's skill sum matches the target
            if (currentPairSkillSum != targetSkillSum) {
                return -1;  // Not possible to form valid teams
            }
            
            // Step 5: Calculate chemistry and add to total
            totalChemistry += (long) skill[left] * skill[right];
            
            // Move pointers
            left++;
            right--;
        }
        
        // Step 6: Return the total chemistry
        return totalChemistry;
    }
}
